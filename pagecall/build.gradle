plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 23
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        versionCode 0
        versionName "0.0.30-rc9" // Update `version` field of PagecallWebView as you change this
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    api 'com.google.code.gson:gson:2.8.9'
    api 'io.github.haiyangwu:mediasoup-client:3.4.0'
}

ext {
    GITHUB_USER = "pagecall"
    GITHUB_REPO = "pagecall-android-sdk"
    GITHUB_PKG_NAME = "pagecall-android-sdk"
    GITHUB_PKG_VERSION = "0.0.30-rc9"
}

publishing {
    publications {
        release(MavenPublication) {
            groupId 'com.pagecall'
            artifactId GITHUB_PKG_NAME
            version GITHUB_PKG_VERSION
            artifact("$buildDir/outputs/aar/pagecall-release.aar")

            // This block generates a POM file with the included dependencies (both implementation and api)
            // for the published library. It ensures that users of the library will automatically get the
            // required dependencies when they add the library to their projects.
            pom.withXml {
                Node root = asNode()
                Node dependenciesNode = root.appendNode('dependencies')

                configurations.implementation.allDependencies.each { dep ->
                    if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
                        return

                    Node dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('scope', 'compile')
                }

                configurations.api.allDependencies.each { dep ->
                    if (dep.group == null || dep.version == null || dep.name == null || dep.name == "unspecified")
                        return

                    Node dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)
                    dependencyNode.appendNode('scope', 'compile')
                }
            }

            pom {
                name = GITHUB_PKG_NAME
                description = 'lightweight Android SDK for embedding Pagecall webapp with seamless audio support.'
                url = "https://github.com/$GITHUB_USER/$GITHUB_REPO"
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = GITHUB_USER
                        name = 'parkjurung'
                        email = 'ryan@pagecall.com'
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/${GITHUB_USER}/${GITHUB_REPO}.git"
                    developerConnection = "scm:git:ssh://github.com/${GITHUB_USER}/${GITHUB_REPO}.git"
                    url = "https://github.com/$GITHUB_USER/$GITHUB_REPO/tree/main"
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/$GITHUB_USER/$GITHUB_REPO")
            credentials {
                username = GITHUB_USER
                password = System.getenv("GITHUB_TOKEN") 
            }
        }
    }
}
